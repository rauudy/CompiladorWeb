const code = `return (function(){
/* generated by ts-jison-lex 0.0.9 */
const { JisonLexer } = require('@ts-jison/lexer');

function Lexer (yy = {}) {
  this.options = {};

  JisonLexer.call(this, yy);

  this.rules = [/^(?:x)/,/^(?:y)/,/^(?:$)/];
  this.conditions = {"INITIAL":{"rules":[0,1,2],"inclusive":true}};
  this.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {
    const YYSTATE=YY_START;
    switch($avoiding_name_collisions) {
    case 0:return 'X';
      break;
    case 1:return 'Y';
      break;
    case 2:return 'EOF';
      break;
    }
  }
}

// Extends JisonLexer
Lexer.prototype = Object.create(JisonLexer.prototype);
Object.defineProperty(Lexer.prototype, 'constructor', {
  value: Lexer,
  enumerable: false,
  writable: true
});

Object.defineProperty(exports, "__esModule", { value: true });
exports.Lexer = Lexer;
return Lexer;

})();
`;
const lexer = eval(code);
